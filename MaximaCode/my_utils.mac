filter(l,pred):=if l=[] then [] else if pred(first(l)) then cons(
  first(l),filter(rest(l),pred)) else filter(rest(l),pred)$

enumerate(l):=makelist([i, l[i]], i, 1, length(l))$

noncommutative_dot_enter():=(
  dot_commutative:member(commutative, properties(".")),
  remove(".", commutative))$

noncommutative_dot_exit():=if dot_commutative then declare(".", commutative)$

twoDmax:lambda([twoDlist],
  lreduce(max,
    map(lambda([x],
        lreduce(max,x)),
      twoDlist)))$

apply_repeatedly(xform, arg):=block([prev:ev(xform(arg)), nxt, cnt],
  for cnt:1 thru 50 do(
    nxt:ev(xform(prev)),
    if nxt = prev then (return(nxt)),
    prev:nxt),
  nxt)$

linspace(start, stop, no_steps):=block([delta:stop-start],
  makelist(start + delta/(no_steps-1)*i,i,0,no_steps-1))$

get_submatrix(M, r_start, r_stop, c_start, c_stop):=block(
  [r_dim:r_stop-r_start+1, c_dim:c_stop-c_start+1, gm],
  local(gm), gm[i,j]:=M[i+r_start-1, j+c_start-1],
  genmatrix(gm, r_dim, c_dim))$

xyz_coords_to_spherical(xyz):=block([x:xyz[1], y:xyz[2], z:xyz[3]],
  [sqrt(x^2+y^2+z^2), acos(z/sqrt(x^2+y^2+z^2)), atan2(y,x)])$
