load("test_BrickBF_physvals")$

get_tang_comp(n, val):=express(-n~(n~val))$

face_normals: [[1,0,0],
               [1,0,0],
               [0,1,0],
               [0,1,0],
               [0,0,1],
               [0,0,1]]$


phys_funs: remove_dependent(express(subst(grd_subs, onef_efs)))$

steps: setify(linspace(0,1,3))$
face_test_coords:listify(cartesian_product(steps, steps))$
face_test_coords_subs:makelist(makelist(
    concat(fc,i)=tfc[i],i,1,2),tfc,face_test_coords)$

face_lam_subs:[[lam1=0,   lam2=fc1, lam3=fc2],
               [lam1=1,   lam2=fc1, lam3=fc2],
               [lam1=fc1, lam2=0,   lam3=fc2],
               [lam1=fc1, lam2=1,   lam3=fc2],
               [lam1=fc1, lam2=fc2, lam3=0   ],
               [lam1=fc1, lam2=fc2, lam3=1   ]]$

physvals_on_faces:makelist(makelist(makelist(subst(fcs,bf), fcs, face_test_coords_subs),
    bf, subst(face_lam_subs[i], phys_funs)),
  i, 1, length(face_normals))$
physvals_tangential_to_faces:makelist(makelist(makelist(
      get_tang_comp(face_normals[i],bfval), bfval, facevals), facevals, physvals_on_faces[i]),
  i, 1, length(physvals_on_faces))$

per_face_tangential:makelist(makelist(
    physvals_tangential_to_faces[faceno][i], i, face_edges[faceno]),
  faceno, 1, length(face_edges))$