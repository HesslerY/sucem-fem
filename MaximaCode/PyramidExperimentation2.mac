load("PyramidBasisFunction")$
load("SixPyrams")$
load("SysmatUtils")$
load("nchrpl")$

intg_pyr(fn):=integrate(integrate(integrate(fn,u1,0,1-u3),u2,0,1-u3),u3,0,1)$
intg_pyr_i(fn):=block([indf:integrate(block([indf:integrate(block([indf:integrate(fn,u1)],
        fullratsimp(ev(indf, u1:1-u3) - ev(indf, u1:0))),u2)],
    fullratsimp(ev(indf, u2:1-u3) - ev(indf, u2:0))),
    u3)], fullratsimp(ev(indf, u3:1) - ev(indf, u3:0)))$
make_locmat(BFlist, J):=make_locmat_generic(BFlist, J, intg_pyr_i)$
make_locmats(BFlist, pyr_verts):=makelist(
  make_locmat(subs_verts(BFlist, verts), subs_verts(J, verts)), verts, pyr_verts)$

/*vol: integrate(integrate(integrate(subs_verts(J, el_ verts[1]),u1,0,1-u3),u2,0,1-u3),u3,0,1)$*/
 

test_elverts:el_verts[1]$

el_J:subs_verts(J, test_elverts)$
el_r:subs_verts(r, test_elverts)$
el_ru:subs_verts(r_u, test_elverts)$
el_l:makelist(subs_verts(lfn, test_elverts), lfn, [l1,l2,l3])$
el_g:makelist(subs_verts(gfn, test_elverts), gfn, [g1,g2,g3])$

N1:shapefns_l[1] $ g_N1: post_crl_simplify(grad(N1)) $
N2:shapefns_l[2] $ g_N2: post_crl_simplify(grad(N2)) $
N3:shapefns_l[3] $ g_N3: post_crl_simplify(grad(N3)) $
N4:shapefns_l[4] $ g_N4: post_crl_simplify(grad(N4)) $
N5:shapefns_l[5] $ g_N5: post_crl_simplify(grad(N5)) $

base_ef_c:N1*(g_N2+g_N4) - N2*(g_N1+g_N3)$ /* -Omega_15 */
apex_ef_c:N1*g_N5 - N5*g_N1$ /* Omega_12 */

D_base_ef_c:post_crl_simplify(curl(base_ef_c))$
D_apex_ef_c:post_crl_simplify(curl(apex_ef_c))$

onef_efs_c:[base_ef_c,
-shift_fn_edge(base_ef_c, 2),
shift_fn_edge(base_ef_c,4),
-shift_fn_edge(base_ef_c,3),
apex_ef_c,
shift_fn_edge(apex_ef_c, 4),
shift_fn_edge(apex_ef_c, 2),
shift_fn_edge(apex_ef_c, 3)]$
D_onef_efs_c:post_crl_simplify(map("curl", onef_efs_c))$


base_ef_c1: N1*(g_N2+g_N4) + N2*(g_N1+g_N3)$ /* I think this should automatically
                                               be compatible between elements? */
apex_ef_c1: N1*g_N5 + N5*g_N1$ 

D_base_ef_c1: post_crl_simplify(curl(base_ef_c1))$
D_apex_ef_c1:post_crl_simplify(curl(apex_ef_c1))$

onef_efs_c_1:[base_ef_c1,
shift_fn_edge(base_ef_c1, 2),
shift_fn_edge(base_ef_c1,4),
shift_fn_edge(base_ef_c1,3),
apex_ef_c1,
shift_fn_edge(apex_ef_c1, 4),
shift_fn_edge(apex_ef_c1, 2),
shift_fn_edge(apex_ef_c1, 3)]$
D_onef_efs_c_1:post_crl_simplify(map("curl", onef_efs_c_1))$


base_fs_c_2m:N1*N2*(g_N3+g_N4)$
onef_base_ffs_c_2m:[N1*N2*(g_N3+g_N4), N2*N4*(g_N1+g_N3),
                    N3*N4*(g_N1+g_N2),N1*N3*(g_N2+g_N4)]$
D_onef_base_ffs_c_2m:post_crl_simplify(map("curl", onef_base_ffs_c_2m))$

my_base_fs_c_2m:base_ef_c*lam1*lam2$
onef_my_base_ffs_c_2m:[my_base_fs_c_2m, shift_fn_edge(my_base_fs_c_2m, 2),
                    shift_fn_edge(my_base_fs_c_2m, 4),
                    shift_fn_edge(my_base_fs_c_2m, 3)]$
D_onef_my_base_ffs_c_2m:post_crl_simplify(map("curl", onef_my_base_ffs_c_2m))$

apex_fs_c_2m_1:N4*N5*(g_N3+g_N1)$
apex_fs_c_2m_2:N3*N5*(g_N4+g_N2)$

onef_apex_ffs_c_2m:[apex_fs_c_2m_1, shift_fn_edge(apex_fs_c_2m_1, 2),
                  shift_fn_edge(apex_fs_c_2m_1, 4),
                  shift_fn_edge(apex_fs_c_2m_1, 3),
                  apex_fs_c_2m_2, shift_fn_edge(apex_fs_c_2m_2, 2),
                  shift_fn_edge(apex_fs_c_2m_2, 4),
                  shift_fn_edge(apex_fs_c_2m_2, 3)]$
D_onef_apex_ffs_c_2m:post_crl_simplify(map("curl", onef_apex_ffs_c_2m))$


my_apex_fs_c_2m_1:apex_ef_c*lam2$
my_apex_fs_c_2m_2:apex_ef_c*lam1$

onef_my_apex_ffs_c_2m:[my_apex_fs_c_2m_1, shift_fn_edge(my_apex_fs_c_2m_1, 2),
                  shift_fn_edge(my_apex_fs_c_2m_1, 4),
                  shift_fn_edge(my_apex_fs_c_2m_1, 3),
                  my_apex_fs_c_2m_2, shift_fn_edge(my_apex_fs_c_2m_2, 2),
                  shift_fn_edge(my_apex_fs_c_2m_2, 4),
                  shift_fn_edge(my_apex_fs_c_2m_2, 3)]$
D_onef_my_apex_ffs_c_2m:post_crl_simplify(map("curl", onef_my_apex_ffs_c_2m))$


vf_c_2m:N4*N1*g_N5$
onef_vfs_c_2m:[vf_c_2m]$
D_onef_vfs_c_2m:[post_crl_simplify(curl(vf_c_2m))]$

my_vf_c_2m:apex_ef_c*lam1*lam2$
onef_my_vfs_c_2m:[my_vf_c_2m]$
D_onef_my_vfs_c_2m:[post_crl_simplify(curl(my_vf_c_2m))]$

onef_1st:append(onef_efs_c, onef_efs_c_1)$
D_onef_1st:append(D_onef_efs_c, D_onef_efs_c_1)$

onef_m2nd:append(onef_1st, onef_base_ffs_c_2m, onef_apex_ffs_c_2m,
  onef_vfs_c_2m)$

/* onef_m2nd:append(onef_1st, [])$ */

D_onef_m2nd:append(D_onef_1st, D_onef_base_ffs_c_2m, D_onef_apex_ffs_c_2m,
  D_onef_vfs_c_2m)$


/*D_onef_m2nd:append(D_onef_1st, [])$ */


/*
onef_partial:append(onef_1st, onef_my_apex_ffs_c_2m, onef_my_base_ffs_c_2m, onef_my_vfs_c_2m)$
D_onef_partial:append(D_onef_1st, D_onef_my_apex_ffs_c_2m, D_onef_my_base_ffs_c_2m, D_onef_my_vfs_c_2m)$

tst_fns_u:makelist(subs_u(subs_grds_lam(fn)), fn, onef_partial)$
D_tst_fns_u:makelist(subs_u(subs_grds_lam(fn)), fn, D_onef_partial)$ 


locmat_oneform_mass:make_locmats(tst_fns_u, [test_elverts])$
locmat_oneform_stiffness:subst([[0,0,0]=0],
  make_locmats(D_tst_fns_u, [test_elverts]))$
locmat_subfns:makelist(subs_verts(tst_fns_u, verts), verts, [test_elverts])$
locmat_J:makelist(subs_verts(J, verts), verts, [test_elverts])$

fns:locmat_subfns[1]$
J_abs:abs(locmat_J[1])$
M:locmat_oneform_mass[1]$
S:locmat_oneform_stiffness[1]$

cp:ncharpoly((M^^-1).S, w)$
v: map(last, allroots(cp))$
*/