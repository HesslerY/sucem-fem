load("PyramidBasisFunction")$
load("SixPyrams")$
load("gen_pyram_quad_rules")$

M_11:onef_efs[1].onef_efs[1]$
fn_higher_intrp:(3*lam4-1)*(2*lam3+2*lam5-1)$
M_higher:M_11*fn_higher_intrp^2$

vol: integrate(integrate(integrate(subs_verts(J, el_verts[1]),u1,0,1-u3),u2,0,1-u3),u3,0,1)$
intg_pyr(fn):=integrate(integrate(integrate(fn,u1,0,1-u3),u2,0,1-u3),u3,0,1)$

tstf:subs_verts(subs_grds_lam(M_higher), el_verts[1])$
tst_J:abs(subs_verts(J, el_verts[1]))$
intg_tst_fn_u:subs_u(tstf)$
intg_tst_fn_list_u:subs_list_u(intg_tst_fn_u)$


pyr_rule_2:make_pyr_rule(qr2_2d[1], qr2_2d[2], pts[2], b[2])$
pyr_rule_3:make_pyr_rule(qr3_2d[1], qr3_2d[2], pts[3], b[3])$
pyr_rule_3_num:make_pyr_rule(rationalize(bfloat(qr3_2d[1])),
  rationalize(bfloat(qr3_2d[2])),
  rationalize(pts_num[3]), rationalize(b_num[3]))$
pyr_rule_4:make_pyr_rule(qr4_2d[1], qr4_2d[2], pts4, b4)$
pyr_rule_4_3:make_pyr_rule(rationalize(bfloat(qr4_2d[1])), rationalize(bfloat(qr4_2d[2])), rationalize(pts_num[3]), rationalize(b_num[3]))$
pyr_rule_3_4:make_pyr_rule(qr3_2d[1], qr3_2d[2], pts4, b4)$

ana_res:intg_pyr(intg_tst_fn_u*tst_J)$

