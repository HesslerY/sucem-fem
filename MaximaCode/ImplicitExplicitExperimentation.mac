load("BrickLumping")$

twobrick_onef_dofmap_a:[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11],
                        [2, 3,12,13,14,15,16,17, 9,18,11,19]]+1$

a:0 $ b:8 $ c:16 $ d:20 $ e:28 $ tot:e+8 $
dim_a:b-a $ dim_b: c-b $ dim_c: d-c $ dim_d: e-d $ dim_e: tot-e $
end_a:a+dim_a $ end_b:b+dim_b $ end_c:c+dim_c $ end_d:d+dim_d $ end_e:e+dim_e $ 
fourbrick_onef_dofmap:[[a+0,a+1,b+0,b+1,a+2,a+3,a+4,a+5,a+6,b+6,a+7,b+7],
                       [b+0,b+1,c+0,c+1,b+2,b+3,b+4,b+5,b+6,c+2,b+7,c+3],
                       [c+0,c+1,d+0,d+1,d+2,d+3,d+4,d+5,c+2,d+6,c+3,d+7],
                       [d+0,d+1,e+0,e+1,e+2,e+3,e+4,e+5,d+6,e+6,d+7,e+7]]+1 $


twobrick_el_beta:[1/4, 0]$
fourbrick_el_beta:[1/4, 1/4, 0, 0]$

/* dm:twobrick_onef_dofmap_a$ */
dm:fourbrick_onef_dofmap $
el_beta:fourbrick_el_beta $

locmats_A:makelist((1/dt)^2*M_trapz + beta*S_trapz, beta, el_beta)$
A:make_global(locmats_A, "+", dm, dm)$

locmats_B:makelist(2*M_trapz/(dt^2) - (1-2*beta)*S_trapz, beta, el_beta)$
B:make_global(locmats_B, "+", dm, dm)$
C:copymatrix(A)$

submat_subscripts: listify(cartesian_product({'a, 'b, 'c, 'd, 'e}, {'a, 'b, 'c, 'd, 'e}))$

for mat in ['A, 'B, 'C] do (
  for ss in submat_subscripts do (
    end_row:concat('end_,ss[1]), end_col:concat('end_,ss[2]),
    concat(concat(mat,'_), concat(ss[1], ss[2]))::get_submatrix(ev(mat),
      ev(ss[1]+1), ev(end_row),
      ev(ss[2]+1), ev(end_col))
    )
  )$

A_imp:get_submatrix(A, 1, end_c, 1, end_c)$
A_exp:get_submatrix(A, 1+d, tot, 1+d, tot)$
