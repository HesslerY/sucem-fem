
l1: fullratsimp(diff(r_u, u1))$
l2: fullratsimp(diff(r_u, u2))$
l3: fullratsimp(diff(r_u, u3))$
J: fullratsimp(l1.(l2~l3))$

g1: fullratsimp(vectorsimp((l2~l3)/J))$
g2: fullratsimp(vectorsimp((l3~l1)/J))$
g3: fullratsimp(vectorsimp((l1~l2)/J))$

subs_verts(expr, verts):=fullratsimp(express(subst(
  [n0=verts[1], n1=verts[2], n2=verts[3], n3=verts[4], n4=verts[5]],
  expr)))$
subs_grds(expr):=subst([grad(u1)=g1, grad(u2)=g2, grad(u3)=g3], expr)$
subs_grds_lam(expr):=subst([grad(lam1)=g1, grad(lam2)=g2, grad(lam5)=g3,
  grad(lam3)=-g1-g3, grad(lam4)=-g2-g3], expr)$
subs_grds_lam_q(expr):=subst([grad(lam1)='gq1, grad(lam2)='gq2, grad(lam5)='gq3,
  grad(lam3)=-'gq1-'gq3, grad(lam4)=-'gq2-'gq3], expr)$
subs_u(expr):=fullratsimp(vectorsimp(
    ev(expr, lam1:u1, lam2:u2, lam5:u3, lam3:1-u1-u3, lam4:1-u2-u3)))$
subs_list_u(expr):=subst([u1=u[1], u2=u[2], u3=u[3]], expr)$

test_pyr_lams:[]$
for lam5 in linspace(0, 99/100, 3) do(
  for lam2 in linspace(0, 1-lam5, 3) do(
    for lam1 in linspace(0, 1-lam5, 3) do(
      test_pyr_lams:endcons(
        [lam1, lam2, 1-lam1-lam5, 1-lam2-lam5, lam5], test_pyr_lams)
      )))$
num_vals(fns, test_lams):=makelist(makelist(ev(fn, lams:l), l, test_lams),
  fn, fns)$

to_lamlist(expr):=subst(
  [lam1=lams[1], lam2=lams[2], lam3=lams[3], lam4=lams[4], lam5=lams[5]],
  expr)$

l25: l1 $ l45: -l1 $ l35: l2 $ l15: -l2 $ l12: l3 $
l23: l3-l1 $ l34: l3-l1-l2 $ l41: l3-l2 $



e1: -l15 $ e2: l25 $ e3: -l45 $ e4: l35 $
e5: l12 $ e6: l41 $ e7: l23 $ e8: l34 $
