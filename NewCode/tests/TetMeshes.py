from __future__ import division

import numpy as N

__all__ = ('TwoTets', 'FlatTet', 'InscribedTetMesh', )

class TestTetMesh(object):
    listmesh={'Nodes' : None,
              'ElementNodes' : None,
              'ElementEdges' : None,
              'ElementFaces' : None,
              'FaceNodes' : None,
              'EdgeNodes' : None,
              'ElementConnect2Elem' : None,
              'ElementConnect2Face' : None,
              'FaceConnect2Elem' : None,
              }
    test_local_coords = [(i,j,k,1-i-j-k)
                         for i in N.arange(0,1.01, 1/3.)
                         for j in N.arange(0,1.01-i, 1/3.)
                         for k in N.arange(0, 1.01-i-j, 1/3.)
                         ]
    test_local_coords.reverse()
    test_local_coords = N.array(test_local_coords)

    def setUp(self):
        for key, val in self.listmesh.iteritems():
            assert(not hasattr(self, key))
            setattr(self, key, val.copy())
                

class TwoTets(TestTetMesh):
    listmesh = {}
    listmesh['Nodes'] = N.array([[-0.5,  0.5, -0.5], 
                               [ 0.5,  0.5,  0.5], 
                               [ 0.5, -0.5, -0.5], 
                               [-0.5, -0.5,  0.5], 
                               [-0.5, -0.5, -0.5]], N.float64)
    listmesh['ElementNodes'] = N.array([[1, 2, 3, 4],
                                      [1, 3, 4, 5]], N.int32) - 1
    listmesh['ElementEdges'] = N.array([[1, 2, 3, 4, 5, 6],
                                      [2, 3, 7, 6, 8, 9]], N.int32) - 1
    listmesh['ElementFaces'] = N.array([[1, 2, 3, 4],
                                      [3, 5, 6, 7]], N.int32) - 1
    listmesh['FaceNodes'] = N.array([[1, 2, 3], 
                                   [1, 2, 4], 
                                   [1, 3, 4], 
                                   [2, 3, 4], 
                                   [1, 3, 5], 
                                   [1, 4, 5], 
                                   [3, 4, 5]], N.int32) - 1

    listmesh['EdgeNodes'] = N.array([[1, 2],
                                   [1, 3],
                                   [1, 4],
                                   [2, 3],
                                   [2, 4],
                                   [3, 4],
                                   [1, 5],
                                   [3, 5],
                                   [4, 5]], N.int32) - 1
    listmesh['FaceConnect2Elem']=N.array([[1, 0],
                                        [1, 0],
                                        [1, 2],
                                        [1, 0],
                                        [2, 0],
                                        [2, 0],
                                        [2, 0]],N.int32) - 1
    
    listmesh['ElementConnect2Face'] = N.array([[0, 0, 1, 0],
                                             [3, 0, 0, 0]], N.int32) - 1
    listmesh['ElementConnect2Elem'] = N.array([[0, 0, 2, 0],
                                             [1, 0, 0, 0]], N.int32) - 1
    listmesh['NodeConnect2Element'] = N.array([1,2,1,1,2,1,2,2], N.int32) - 1
    listmesh['NodeConnect2ElementPtr'] = N.array([1, 3, 4, 6, 8, 9], N.int32) - 1
    listmesh['EdgeConnect2Elem'] = N.array([[0,-1],
                                          [0,1],
                                          [0,1],
                                          [0,-1],
                                          [0,-1],
                                          [0,1],
                                          [1,-1],
                                          [1,-1],
                                          [1,-1]], N.int32)
    BoundaryNodes = N.array([True]*5)
    BoundaryFaces = N.array([True]*2 + [False] + [True]*4)
    BoundaryEdges = N.array([True]*9)
    
class FlatTet(TestTetMesh):
    listmesh = {}
    listmesh['Nodes']=N.array([[-1./2, 1./2 ,-1./2],
                             [-1./2, -1./2 , 1./2],
                             [-1./6, 1./6 , 1./6],
                             [-1./6, -1./6,-1./6]], N.float64)
    listmesh['ElementNodes']=N.array([[1,2,3,4]], N.int32) - 1
    listmesh['ElementEdges']=N.array([[1,2,3,4,5,6]], N.int32) - 1
    listmesh['ElementFaces']=N.array([[1,2,3,4]], N.int32) - 1
    listmesh['FaceNodes']=N.array([[1,2,3], [1,2,4], [1,3,4], [2,3,4]], N.int32) - 1
    listmesh['EdgeNodes']=N.array([[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]],
                                N.int32) - 1
    # a single-tet has no connections!
    listmesh['ElementConnect2Face']=N.zeros((1,4), N.int32) - 1
    listmesh['ElementConnect2Elem']=N.zeros((1,4), N.int32) - 1
    listmesh['FaceConnect2Elem']=N.array([[0, -1]]*4, N.int32)
    listmesh['EdgeConnect2Elem'] = N.array([[0]]*6, N.int32)
    BoundaryNodes = N.array([True]*4)
    BoundaryFaces = N.array([True]*4)
    BoundaryEdges = N.array([True]*6)
    FaceEdges = N.array([[1,4,2], [1,5,3], [2,6,3], [4,6,5]], N.int32) - 1
    test_xyz_coords = N.array([[-1/2,1/2,-1/2],
                             [-1/2,1/6,-1/6],
                             [-7/18,7/18,-5/18],
                             [-7/18,5/18,-7/18],
                             [-1/2,-1/6,1/6],
                             [-7/18,1/18,1/18],
                             [-7/18,-1/18,-1/18],
                             [-5/18,5/18,-1/18],
                             [-5/18,1/6,-1/6],
                             [-5/18,1/18,-5/18],
                             [-1/2,-1/2,1/2],
                             [-7/18,-5/18,7/18],
                             [-7/18,-7/18,5/18],
                             [-5/18,-1/18,5/18],
                             [-5/18,-1/6,1/6],
                             [-5/18,-5/18,1/18],
                             [-1/6,1/6,1/6],
                             [-1/6,1/18,1/18],
                             [-1/6,-1/18,-1/18],
                             [-1/6,-1/6,-1/6]], N.float64)

      
class InscribedTetMesh(TestTetMesh):

    listmesh={'Nodes' : N.array([[-1./2 ,     1./2 ,    -1./2],
                               [ 1./2 ,     1./2 ,     1./2],
                               [ 1./2 ,    -1./2 ,    -1./2],
                               [-1./2 ,    -1./2 ,     1./2],  
                               [ 1./6 ,     1./6 ,    -1./6],
                               [-1./6 ,     1./6 ,     1./6],
                               [-1./6 ,    -1./6 ,    -1./6],
                               [ 1./6 ,    -1./6 ,     1./6]], N.float64),
              'ElementNodes' : N.array([[1, 4, 6, 7],
                                      [1, 3, 5, 7],
                                      [3, 4, 7, 8],
                                      [1, 2, 5, 6],
                                      [2, 3, 5, 8],
                                      [2, 4, 6, 8],
                                      [4, 6, 7, 8],
                                      [1, 5, 6, 7],
                                      [3, 5, 7, 8],
                                      [2, 5, 6, 8],
                                      [5, 6, 7, 8]], N.int32) - 1,
              'ElementEdges' : N.array([[ 1,  2,  3,  4,  5,  6],
                                      [ 7,  8,  3,  9, 10, 11],
                                      [12, 10, 13,  5, 14, 15],
                                      [16,  8,  2, 17, 18, 19],
                                      [20, 17, 21,  9, 13, 22],
                                      [23, 18, 21,  4, 14, 24],
                                      [ 4,  5, 14,  6, 24, 15],
                                      [ 8,  2,  3, 19, 11,  6],
                                      [ 9, 10, 13, 11, 22, 15],
                                      [17, 18, 21, 19, 22, 24],
                                      [19, 11, 22,  6, 24, 15]],
                                     N.int32) - 1, 
              'ElementFaces' :  N.array([[ 1,  2,  3,  4], 
                                       [ 5,  6,  7,  8], 
                                       [ 9, 10, 11, 12], 
                                       [13, 14, 15, 16], 
                                       [17, 18, 19, 20], 
                                       [21, 22, 23, 24], 
                                       [ 4, 24, 12, 25], 
                                       [15,  7,  3, 26], 
                                       [ 8, 20, 11, 27], 
                                       [16, 19, 23, 28], 
                                       [26, 28, 27, 25]], N.int32) - 1,
              'FaceNodes' : N.array([[1, 4, 6], 
                                   [1, 4, 7], 
                                   [1, 6, 7], 
                                   [4, 6, 7], 
                                   [1, 3, 5], 
                                   [1, 3, 7], 
                                   [1, 5, 7], 
                                   [3, 5, 7], 
                                   [3, 4, 7], 
                                   [3, 4, 8], 
                                   [3, 7, 8], 
                                   [4, 7, 8], 
                                   [1, 2, 5], 
                                   [1, 2, 6], 
                                   [1, 5, 6], 
                                   [2, 5, 6], 
                                   [2, 3, 5], 
                                   [2, 3, 8], 
                                   [2, 5, 8], 
                                   [3, 5, 8], 
                                   [2, 4, 6], 
                                   [2, 4, 8], 
                                   [2, 6, 8], 
                                   [4, 6, 8], 
                                   [6, 7, 8], 
                                   [5, 6, 7], 
                                   [5, 7, 8], 
                                   [5, 6, 8]], N.int32) - 1,
              'EdgeNodes' : N.array([[1, 4], 
                                   [1, 6], 
                                   [1, 7], 
                                   [4, 6], 
                                   [4, 7], 
                                   [6, 7], 
                                   [1, 3], 
                                   [1, 5], 
                                   [3, 5], 
                                   [3, 7], 
                                   [5, 7], 
                                   [3, 4], 
                                   [3, 8], 
                                   [4, 8], 
                                   [7, 8], 
                                   [1, 2], 
                                   [2, 5], 
                                   [2, 6], 
                                   [5, 6], 
                                   [2, 3], 
                                   [2, 8], 
                                   [5, 8], 
                                   [2, 4], 
                                   [6, 8]], N.int32) - 1,
              'ElementConnect2Elem': N.array([[0, 0, 8, 7], 
                                     [0, 0, 8, 9], 
                                     [0, 0, 9, 7], 
                                     [0, 0, 8, 10],
                                     [0, 0, 10, 9],
                                     [0, 0, 10, 7],
                                     [1, 6, 3, 11],
                                     [4, 2, 1, 11],
                                     [2, 5, 3, 11],
                                     [4, 5, 6, 11],
                                     [8, 10, 9, 7]], N.int32) - 1,
              'ElementConnect2Face': N.array([[0, 0, 3, 1],
                                     [0, 0, 2, 1],
                                     [0, 0, 3, 3],
                                     [0, 0, 1, 1],
                                     [0, 0, 2, 2],
                                     [0, 0, 3, 2],
                                     [4, 4, 4, 4],
                                     [3, 3, 3, 1],
                                     [4, 4, 3, 3],
                                     [4, 3, 3, 2],
                                     [4, 4, 4, 4]], N.int32) - 1,
              'FaceConnect2Elem': N.array([[1, 0], 
                                         [1, 0], 
                                         [1, 8], 
                                         [1, 7], 
                                         [2, 0], 
                                         [2, 0], 
                                         [2, 8], 
                                         [2, 9], 
                                         [3, 0], 
                                         [3, 0], 
                                         [3, 9], 
                                         [3, 7], 
                                         [4, 0], 
                                         [4, 0], 
                                         [4, 8], 
                                         [4, 10],
                                         [5, 0], 
                                         [5, 0], 
                                         [5, 10],
                                         [5, 9], 
                                         [6, 0], 
                                         [6, 0], 
                                         [6, 10],
                                         [6, 7], 
                                         [7, 11],
                                         [8, 11],
                                         [9, 11],
                                         [10, 11]], N.int32) - 1,
              'EdgeConnect2Elem' : N.array([[0, -1, -1, -1],
                                          [0, 3, 7, -1],
                                          [0, 1, 7, -1],
                                          [0, 5, 6, -1],  
                                          [0, 2, 6, -1],  
                                          [0, 6, 7, 10],  
                                          [1, -1, -1, -1],
                                          [1, 3, 7, -1],  
                                          [1, 4, 8, -1],  
                                          [1, 2, 8, -1],  
                                          [1, 7, 8, 10],  
                                          [2, -1, -1, -1],
                                          [2, 4, 8, -1],  
                                          [2, 5, 6, -1],  
                                          [2, 6, 8, 10],  
                                          [3, -1, -1, -1],
                                          [3, 4, 9, -1],  
                                          [3, 5, 9, -1],  
                                          [3, 7, 9, 10],  
                                          [4, -1, -1, -1],
                                          [4, 5, 9, -1],  
                                          [4, 8, 9, 10],  
                                          [5, -1, -1, -1],
                                          [5, 6, 9, 10]], N.int32),
              'NodeConnect2Element' : N.array([1, 2, 4, 8, 4, 5, 6, 10,
                                             2, 3, 5, 9, 1, 3, 6, 7,
                                             2, 4, 5, 8, 9, 10, 11, 1,  4, 6, 7, 8, 10, 11,
                                             1, 2, 3, 7, 8, 9,  11, 3,  5, 6, 7, 9, 10, 11],
                                            N.int32) - 1,
              'NodeConnect2ElementPtr' : N.array([1, 5, 9, 13, 17, 24, 31, 38, 45], N.int32) - 1
              }
    BoundaryNodes = N.array([True]*8)     # All the nodes lie on a boundary face
    # Extracted from NewCode/tests/testdata/test_eMAGUSImport/test_tet.out
    BoundaryFaces = N.array([True, 
                     True, 
                     False,
                     False,
                     True, 
                     True, 
                     False,
                     False,
                     True, 
                     True, 
                     False,
                     False,
                     True, 
                     True, 
                     False,
                     False,
                     True, 
                     True, 
                     False,
                     False,
                     True, 
                     True, 
                     False,
                     False,
                     False,
                     False,
                     False,
                     False])
    BoundaryEdges = N.array([True,  
                     True,  
                     True,  
                     True,  
                     True,  
                     False, 
                     True,  
                     True,  
                     True,  
                     True, 
                     False,
                     True, 
                     True, 
                     True, 
                     False,
                     True, 
                     True, 
                     True, 
                     False,
                     True, 
                     True, 
                     False,
                     True, 
                     False])
    FaceEdges = N.array(
        [[0, 3, 1],
         [0, 4, 2],
         [1, 5, 2],
         [3, 5, 4],
         [6, 8, 7],
         [6, 9, 2],
         [7, 10, 2],
         [8, 10, 9],
         [11, 4, 9],
         [11, 13, 12],
         [9, 14, 12],
         [4, 14, 13],
         [15, 16, 7],
         [15, 17, 1],
         [7, 18, 1],
         [16, 18, 17],
         [19, 8, 16],
         [19, 12, 20],
         [16, 21, 20],
         [8, 21, 12],
         [22, 3, 17],
         [22, 13, 20],
         [17, 23, 20],
         [3, 23, 13],
         [5, 14, 23],
         [18, 5, 10],
         [10, 14, 21],
         [18, 23, 21]], N.int32)

class SixPyramConverted(TestTetMesh):
    listmesh={'Nodes' : N.array([
        [0,0,0],[0,0,3],
        [0,2,0],[0,2,3],
        [1,0,0],[1,0,3],
        [1,2,0],[1,2,3],
        [1/2, 1, 3/2]], N.float64),
              'ElementNodes' : N.array([
        [0,2,3,8], [0,1,3,8],
        [4,6,7,8], [4,5,7,8],
        [0,4,5,8], [0,1,5,8],
        [2,6,7,8], [2,3,7,8],
        [0,4,6,8], [0,2,6,8],
        [1,5,7,8], [1,3,7,8]], N.int32),
              'ElementEdges' : N.array([[ 0,  1,  2,  3,  4,  5],
                                        [ 6,  1,  2,  7,  8,  5],
                                        [ 9, 10, 11, 12, 13, 14],
                                        [15, 10, 11, 16, 17, 14],
                                        [18, 19,  2, 15, 11, 17],
                                        [ 6, 19,  2, 20,  8, 17],
                                        [21, 22,  4, 12, 13, 14],
                                        [ 3, 22,  4, 23,  5, 14],
                                        [18, 24,  2,  9, 11, 13],
                                        [ 0, 24,  2, 21,  4, 13],
                                        [20, 25,  8, 16, 17, 14],
                                        [ 7, 25,  8, 23,  5, 14]], dtype=N.int32),
              'ElementFaces' : N.array([[ 0,  1,  2,  3],
                                        [ 4,  5,  2,  6],
                                        [ 7,  8,  9, 10],
                                        [11, 12,  9, 13],
                                        [14, 15, 16, 12],
                                        [17,  5, 16, 18],
                                        [19, 20, 21, 10],
                                        [22,  3, 21, 23],
                                        [24, 15, 25,  8],
                                        [26,  1, 25, 20],
                                        [27, 18, 28, 13],
                                        [29,  6, 28, 23]], dtype=N.int32),
              'FaceNodes' : N.array([[0, 2, 3], [0, 2, 8],
                                     [0, 3, 8], [2, 3, 8],
                                     [0, 1, 3], [0, 1, 8],
                                     [1, 3, 8], [4, 6, 7],
                                     [4, 6, 8], [4, 7, 8],
                                     [6, 7, 8], [4, 5, 7],
                                     [4, 5, 8], [5, 7, 8],
                                     [0, 4, 5], [0, 4, 8],
                                     [0, 5, 8], [0, 1, 5],
                                     [1, 5, 8], [2, 6, 7],
                                     [2, 6, 8], [2, 7, 8],
                                     [2, 3, 7], [3, 7, 8],
                                     [0, 4, 6], [0, 6, 8],
                                     [0, 2, 6], [1, 5, 7],
                                     [1, 7, 8], [1, 3, 7]], dtype=N.int32),
              'EdgeNodes' : N.array([[0, 2], [0, 3],
                                     [0, 8], [2, 3],
                                     [2, 8], [3, 8],
                                     [0, 1], [1, 3],
                                     [1, 8], [4, 6],
                                     [4, 7], [4, 8],
                                     [6, 7], [6, 8],
                                     [7, 8], [4, 5],
                                     [5, 7], [5, 8],
                                     [0, 4], [0, 5],
                                     [1, 5], [2, 6],
                                     [2, 7], [3, 7],
                                     [0, 6], [1, 7]], dtype=N.int32),
              'ElementConnect2Elem' : N.array([[-1,  9,  1,  7],
                                               [-1,  5,  0, 11],
                                               [-1,  8,  3,  6],
                                               [-1,  4,  2, 10],
                                               [-1,  8,  5,  3],
                                               [-1,  1,  4, 10],
                                               [-1,  9,  7,  2],
                                               [-1,  0,  6, 11],
                                               [-1,  4,  9,  2],
                                               [-1,  0,  8,  6],
                                               [-1,  5, 11,  3],
                                               [-1,  1, 10,  7]], dtype=N.int32),
              'ElementConnect2Face' : N.array([[-1,  1,  2,  1],
                                               [-1,  1,  2,  1],
                                               [-1,  3,  2,  3],
                                               [-1,  3,  2,  3],
                                               [-1,  1,  2,  1],
                                               [-1,  1,  2,  1],
                                               [-1,  3,  2,  3],
                                               [-1,  3,  2,  3],
                                               [-1,  1,  2,  1],
                                               [-1,  1,  2,  1],
                                               [-1,  3,  2,  3],
                                               [-1,  3,  2,  3]], dtype=N.int32),
              'FaceConnect2Elem' : N.array([[ 0, -1], [ 0,  9],
                                            [ 0,  1], [ 0,  7],
                                            [ 1, -1], [ 1,  5],
                                            [ 1, 11], [ 2, -1],
                                            [ 2,  8], [ 2,  3],
                                            [ 2,  6], [ 3, -1],
                                            [ 3,  4], [ 3, 10],
                                            [ 4, -1], [ 4,  8],
                                            [ 4,  5], [ 5, -1],
                                            [ 5, 10], [ 6, -1],
                                            [ 6,  9], [ 6,  7],
                                            [ 7, -1], [ 7, 11],
                                            [ 8, -1], [ 8,  9],
                                            [ 9, -1], [10, -1],
                                            [10, 11], [11, -1]], dtype=N.int32),
              }
    diag_edges = N.array([1,10,19,22,24,25], N.int32)
    # First two edges connect to diag edge's starting node, the other two
    # to the diag edge's ending node.
    diag_hexface_edges = N.array([[0,6,3,7],
                                  [9,15,12,16],
                                  [6,18,15,20],
                                  [3,21,12,23],
                                  [0,18,9,21],
                                  [7,20,16,23]], N.int32)
